name: Pull Request
run-name: |
  PR #${{github.event.number}} [${{github.event_name == 'pull_request' && 'changed' || 'review, ' }}${{github.event_name == 'pull_request' && '' || github.event.review.state }}] ${{github.event.pull_request.title}}

on:
  pull_request:
    branches:
      - master
    paths-ignore:
      # No sense in doing these tests for these file
      - 'README.md'
      - 'docs/**/*'
    types:
      - opened
      - ready_for_review
      - synchronize
      - reopened

  pull_request_review:
    types: [submitted]

concurrency:
  group: pr-test-${{ github.ref }}-${{github.event_name}}
  cancel-in-progress: true

jobs:
  check-review-status:
    # Skip the whole workflow if the PR is still in draft
    if: ${{ !github.event.pull_request.draft }}
    runs-on: ubuntu-latest
    outputs:
      BASIC: ${{ steps.config.outputs.BASIC }}
      FULL: ${{ steps.config.outputs.FULL }}
    steps:
      - name: "Generate job configuration from PR status"
        id: config
        run: |
          echo "Generating test configuration for pull-request ${{github.ref_name}} on event: ${{github.event_name}}..."
          case ${{github.event_name}} in
            pull_request_review)
              case "${{github.event.review.state}}" in
                approved)
                  echo "Pull request ${{github.ref_name}} has been approved. Performing full test."
                  full=y
                  ;;
                *)
                  echo "Pull request ${{github.ref_name}} NOT APPROVED yet (${{github.event.review.state}}). Skipping tests while waiting for approval."
                  ;;
              esac
              ;;
            pull_request)
              echo "Pull request ${{github.ref_name}} NOT APPROVED (${{github.event.review.state}}) but updated. Performing basic test."
              basic=y
              ;;
          esac
          (
            echo BASIC=${basic}
            echo FULL=${full}
          )  >> ${GITHUB_OUTPUT}

  basic-validation:
    needs: check-review-status
    if: ${{ needs.check-review-status.outputs.BASIC }}
    strategy:
      matrix:
        include:
          - build-platform: amd64
            base-image: ubuntu:22.04
            uno-middleware: uno_middleware_connext
    uses: ./.github/workflows/ci.yml
    secrets: inherit
    with:
      build-platform: ${{matrix.build-platform}}
      base-image: ${{matrix.base-image}}
      uno-middleware: ${{matrix.uno-middleware}}

  full-validation:
    needs: check-review-status
    if: ${{ needs.check-review-status.outputs.FULL }}
    strategy:
      matrix:
        include:
          - build-platform: arm64
            base-image: ubuntu:22.04
            uno-middleware: uno_middleware_connext
          - build-platform: amd64
            base-image: ubuntu:24.04
            uno-middleware: uno.middleware.native
          - build-platform: arm64
            base-image: ubuntu:24.04
            uno-middleware: uno.middleware.native
    uses: ./.github/workflows/ci.yml
    secrets: inherit
    with:
      build-platform: ${{matrix.build-platform}}
      base-image: ${{matrix.base-image}}
      uno-middleware: ${{matrix.uno-middleware}}
