name: Release Step (Push Image)
run-name: |
  release (${{inputs.flavor}}) - push image [${{github.ref_type == 'branch' && 'nightly' || 'stable'}}, ${{github.ref_name}}]

on:
  workflow_call:
    inputs:
      tag:
        type: string
        required: true
      flavor:
        type: string
        required: true
      tags-config:
        type: string
        required: true
      flavor-config:
        type: string
        required: true

concurrency:
  group: release-push-images-${{ github.ref }}-${{ inputs.flavor }}

jobs:
  push:
    runs-on: ubuntu-latest
    steps:
      - name: Clone uno
        uses: actions/checkout@v4
        with:
          path: src/uno
          submodules: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
 
      - name: Extract image metadata
        id: meta-docker
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ github.repository }}
            ghcr.io/${{ github.repository }}
          tags: ${{ inputs.tags-config }}
          flavor: ${{ inputs.flavor-config }}
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index
    
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
    
      - name: Log in to GitHub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
 
      - name: Build and push images to GitHub
        uses: docker/build-push-action@v5
        with:
          file: src/uno/docker/release/Dockerfile
          tags: ${{ steps.meta-docker.outputs.tags }}
          labels: ${{ steps.meta-docker.outputs.labels }}
          annotations: ${{ steps.meta-docker.outputs.annotations }}
          push: true
          context: src/uno
          platforms: linux/amd64,linux/arm64
          build-args: |
            BASE_IMAGE=ghcr.io/${{ inputs.tag }}
